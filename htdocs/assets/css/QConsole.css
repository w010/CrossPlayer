
:root {
    --qc-font-size: .9em;
    --qc-font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --qc-background: #222129;
    --qc-color: #ccc;
    --qc-log-color: #ccc;
    --qc-size: 30;
    --qc-offset: 2.75rem;  /* prompt bar height */
}


.q-console    {
    position: fixed;
    z-index: 10002;
    /*top: 0;*/
    top: calc(0px - var(--qc-offset)); /* offset by prompt height */
    left: 0;
    width: 100%;
    min-height: 0;
    max-height: 0;
    transition: min-height .2s, max-height .2s, height .2s, min-width .2s, max-width .2s, width .2s, top .2s;
    background: var(--qc-background);
    font-size: var(--qc-font-size);
    font-family: var(--qc-font-family);
    color: var(--qc-color);
        /*color: attr(data-color);*/
}
    .q-console.expanded {
        max-height: calc(var(--qc-size) * 1vh);
        min-height: calc(var(--qc-size) * 1vh);
        box-shadow: .56rem .69rem .56rem .25rem  #02020291;
        top: 0;
    }


/* LOG */

.q-console .log-container   {
    background: var(--qc-background);
    transition: min-height .2s, max-height .2s, height .2s, min-width .2s, max-width .2s, width .2s;
    overflow-y: hidden;
    min-height: 0;
    max-height: 0;
    padding-bottom: var(--qc-offset);
}
    .q-console.expanded .log-container   {
        overflow-y: scroll;
        max-height: calc(var(--qc-size) * 1vh);
        min-height: calc(var(--qc-size) * 1vh);
    }

    .q-console .log-container .item    {
        display: block;
        margin: 1.5rem  1.25rem  .125rem;
        border-top: .063rem solid var(--qc-log-color);
        color: var(--qc-log-color);
    }
    .q-console .log-container .item.level-log    {
        --qc-log-color: #ccc;
    }
    .q-console .log-container .item.level-info    {
        --qc-log-color: #729eff;
    }
    .q-console .log-container .item.level-warning    {
        --qc-log-color: #bbba65;
    }
    .q-console .log-container .item.level-error    {
        --qc-log-color: #bb6572;
    }



/* CLI */

.q-console .cli    {
    /*border: 1px solid red;*/
    border-top: .063rem solid #6850b0;
    background: var(--qc-background);
    position: absolute;
    bottom: 0;
    height: 1.5rem;
    width: 100%;
    box-shadow: var(--qc-background) 0  -.625rem  1.25rem  .25rem;
}

    .q-console .cli .command-line    {
        width: calc(100% - 1.5rem - 2.5rem);
        display: inline-block;
        position: relative;
            /*border: 1px solid orange !important;*/
    }
        .q-console .cli input.command    {
            background: var(--qc-background);
            border: none;
            color: var(--qc-color);
                /*border: 1px solid yellow !important;*/
                /*background: red;*/

            outline: none;
            padding: 0;
            margin: 0;

            vertical-align: top;
            display: inline-block;
            width: 100%;
            height: 1.5rem;
            position: relative;
        }

            .q-console .cli .autocomplete    {
                position: absolute;
                top: 0; left: 0;

                pointer-events: none;
                    /*border: 1px solid #00ff95;*/
                    /*background-color: #988131;*/
            }
                /* the ac-spacer MUST keep the same text style like the text input
                    to calculate valid offset of autocompletion box
                    (that's the trick to position item next to the input cursor:
                     - a hidden layer with innerhtml = input value, which should do the same offset)
                */
                .q-console .cli .ac-spacer    {
                        /*border: 1px solid red;*/
                        /*background-color: #0f5132;*/
                    position: relative;
                    /*bottom: -20px;*/
                    /*opacity: .3;*/
                    opacity: 0;
                    pointer-events: none;
                }
                .q-console .cli .ac-container    {
                    position: absolute;
                    bottom: 0;
                    left: 100%;
                    margin-left: .2em;
                    box-shadow: 0.15rem 0.15rem 0.4em 0.1rem #02020291;
                        /*min-width: 5em;*/
                        /*min-height: 5em;*/
                        /*border: 1px solid red;*/
                        /*background-color: #0f5132;*/
                }
                    .q-console .cli .ac-container .ac-item   {
                            /*border: 1px solid blue;*/
                            /*background-color: #5c636a;*/
                        background-color: var(--wtp-background-general);
                        border: 1px solid var(--wtp-background-alt);
                        color: var(--wtp-gray5);
                        padding: 0 0px;
                        white-space: pre;
                        pointer-events: initial;
                        cursor: alias;
                    }
                        .q-console .cli .ac-container .ac-completion   {
                            font-style: italic;
                        }
                        .q-console .cli .ac-container .ac-cmd   {
                            color: var(--wtp-gray2);
                        }
                    .q-console .cli .ac-container .ac-item:hover,
                    .q-console .cli .ac-container .ac-item.ac-selected   {
                        background-color: var(--wtp-background-alt);
                        border: 1px solid var(--wtp-background-general);
                        color: #50b06b;
                    }

    .q-console .cli .prompt::before {
        content: "$";
        /*border: 1px solid #0048ff;*/
        width: 1.5rem;
        height: 1.5rem;
        display: block;
        text-align: center;
}
    .q-console .cli .prompt    {
        display: inline-block;
    }
